# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "seconion1204"
  config.vm.boot_timeout = 300
  #config.vm.box_url = "http://jonschipp.com/vm/seconion1204.box"
  config.vm.box_url = "https://uofi.box.com/shared/static/g9c863bd70f84j2yu9x1.box"

  # Checksums for the box seconion1204.box:
  # md5sum:  11f60efb9cdb67d77192d9f313e86518
  # sha1sum: 64a52128b8b45edb9f85ce448c6ac128159ba840
  config.vm.box_download_checksum = "11f60efb9cdb67d77192d9f313e86518"
  config.vm.box_download_checksum_type = "md5"

  # SecurityOnion start page: Point host browser to https://localhost:8443
  config.vm.network :forwarded_port, guest: 443, host: 8443
  # Snorby: Point host browser to https://localhost:8444
  config.vm.network :forwarded_port, guest: 444, host: 8444
  # ELSA: Point host browser to https://localhost:8154
  config.vm.network :forwarded_port, guest: 3154, host: 8154

  # Create a private network, which allows host-only access to the machine
  # using a specific IP. Default NAT is up (eth0, 10.0.2.15). REQUIRED for eth0.
  # Host-Only Adapter (eth2)
    config.vm.network "private_network", ip: "10.1.1.10", :netmask => "255.255.255.0", :adapter => 2

  #config.vm.synced_folder "~/repos/so-scripts", "/so-scripts"

  # VM specific settings
    nsm_disk = './nsm.vdi'

    config.vm.provider "virtualbox" do |v|
     v.gui = true
     v.name = "seconion-standalone"
     v.customize ["modifyvm", :id, "--memory", "2048"]
     v.customize ["modifyvm", :id, "--cpus", 3]
     v.customize ["modifyvm", :id, "--audio", "none", "--usb", "on", "--usbehci", "off"]
     unless File.exist?(nsm_disk)
     	v.customize ['createhd', '--filename', nsm_disk, '--size', 100000]
     end
     v.customize ['storageattach', :id, '--storagectl', 'SATAController', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', nsm_disk]
   end

  # Shell script to provision machine
  config.vm.provision "shell", path: "provision.sh"

end
